/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.valuta;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.data.time.Day;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;

/**
 *
 * @author Mitja
 */
public class GlavnoOkno extends javax.swing.JFrame {

    /**
     * Creates new form GlavnoOkno
     */
    List<String> valute;            //Seznam izbranih valut. Ob izbiri želenih valut iz menija se oznake le teh shranijo v ta seznam. Seznam prazen = izbrane vse valute
    List<Valuta> ls_valuta_date;    //Seznam valut. Seznam se polni iz podane poizvedbe v podatkovno bazo.
    List<String> ls_oznake;         //Seznam vseh unikatnih oznak valut. Uporaba za polnjenje combobox-ov
    XYPlot plot;                    //XYPlot, uporabljen pri risanju na graf

    public GlavnoOkno() {
        initComponents();
        valute = new ArrayList<>();
        ls_valuta_date = new ArrayList<>();
        ls_oznake = new ArrayList<>();

        //Init grafa
        TimeSeries series = new TimeSeries("");
        final TimeSeriesCollection dataset1 = new TimeSeriesCollection(series);
        final JFreeChart chart = ChartFactory.createTimeSeriesChart(
                "Valute", "Čas", "Vrednost", dataset1, true, true, false
        );

        chart.setBackgroundPaint(Color.white);

        this.plot = chart.getXYPlot();
        this.plot.setBackgroundPaint(Color.lightGray);
        this.plot.setDomainGridlinePaint(Color.white);
        this.plot.setRangeGridlinePaint(Color.white);

        final ValueAxis axis = this.plot.getDomainAxis();
        axis.setAutoRange(true);

        final NumberAxis rangeAxis2 = new NumberAxis("Range Axis 2");
        rangeAxis2.setAutoRangeIncludesZero(false);

        final ChartPanel chartPanel = new ChartPanel(chart);
        jPanel1.removeAll();
        jPanel1.add(chartPanel);
        jPanel1.validate();

        setComboboxOznake();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("com.mycompany_Valuta_jar_1.0-SNAPSHOTPU").createEntityManager();
        valutaQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT v FROM Valuta v");
        valutaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : valutaQuery.getResultList();
        valutaQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT v FROM Valuta v");
        valutaList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : valutaQuery1.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        text_dan1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        text_mesec1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        text_danIzr = new javax.swing.JTextField();
        text_mesecIzr = new javax.swing.JTextField();
        text_letoIzr = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        text_leto1 = new javax.swing.JTextField();
        text_dan2 = new javax.swing.JTextField();
        text_mesec2 = new javax.swing.JTextField();
        text_leto2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, valutaList1, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${datum}"));
        columnBinding.setColumnName("Datum");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${oznaka}"));
        columnBinding.setColumnName("Oznaka");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tecaj}"));
        columnBinding.setColumnName("Tecaj");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jScrollPane1.setViewportView(jTable1);

        text_dan1.setToolTipText("Dan");

        jButton2.setText("Potrdi");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        text_mesec1.setToolTipText("Mesec");

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jButton1.setText("Izberi valute");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Prikaži na grafu");

        jLabel2.setText("Izračun zaslužka/izgub");

        jButton3.setText("Potrdi");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        text_danIzr.setToolTipText("Dan");

        text_mesecIzr.setToolTipText("Mesec");

        text_letoIzr.setToolTipText("Leto");

        text_leto1.setToolTipText("Leto");

        text_dan2.setToolTipText("Dan");

        text_mesec2.setToolTipText("Mesec");

        text_leto2.setToolTipText("Leto");

        jLabel4.setText("Datum od:");

        jLabel5.setText("Datum do:");
        jLabel5.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(text_dan2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(text_mesec2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(text_leto2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(text_dan1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(text_mesec1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(text_leto1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(59, 59, 59))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(26, 26, 26)
                                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(text_danIzr, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(text_mesecIzr, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(text_letoIzr, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_dan1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_mesec1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_leto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_dan2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_mesec2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_leto2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_danIzr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_mesecIzr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_letoIzr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel3)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(32, 32, 32))
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    /*
        Funkcija ob potrditvi izbire datuma od-do ter želenih valut. Ta najprej pridobi vnesene vrednosti za oba datuma, nato se izvede poizvedba, ki pridobi vse valute, glede na
        nastavitve. Ob pridobitvi seznama se napolni tabela ter nastavi combobox-e grafa in izračuna.
    */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        EntityManagerFactory emf = Persistence.createEntityManagerFactory("com.mycompany_Valuta_jar_1.0-SNAPSHOTPU");
        EntityManager em = emf.createEntityManager();

        Date date_od = new Date(Integer.parseInt(text_leto1.getText()) - 1900, Integer.parseInt(text_mesec1.getText()) - 1, Integer.parseInt(text_dan1.getText()));
        Date date_do = new Date(Integer.parseInt(text_leto2.getText()) - 1900, Integer.parseInt(text_mesec2.getText()) - 1, Integer.parseInt(text_dan2.getText()));

        //Preverimo, da prvi datum ni večji od drugega. 
        if (date_od.after(date_do)) {
            JOptionPane.showMessageDialog(rootPane, "Prvi datum mora biti manjši od drugega!");
            return;
        }

        //Poizvedba v podatkovno bazo, za pridobitev tečajnice med izbranima datuma
        List<Valuta> allEvents = new ArrayList<>();
        allEvents = entityManager.createQuery("SELECT e FROM Valuta e WHERE e.datum BETWEEN :startDate AND :endDate")
                .setParameter("startDate", date_od)
                .setParameter("endDate", date_do)
                .getResultList();

        //Ustvarimo novo tabelo za prikaz podatkov
        DefaultTableModel userTableModel
                = new DefaultTableModel(new Object[]{"Datum", "Oznaka", "Tecaj"}, 0);

        //Zanka vstavljanja podatkov v tabelo. Ob tem pazimo, da vsavimo oz. prikažemo samo želene valute. (prazen seznam želenih valut = vse valute)
        for (int i = 0; i < allEvents.size(); i++) {
            Valuta tmp = allEvents.get(i);
            String[] data = new String[3];

            if (valute.isEmpty()) {
                data[0] = String.valueOf(tmp.getDatum().getYear() + 1900) + "-" + String.valueOf(tmp.getDatum().getMonth() + 1) + "-" + String.valueOf(tmp.getDatum().getDay());
                data[1] = tmp.getOznaka();
                data[2] = tmp.getTecaj();
                userTableModel.addRow(data);
            } else if (valute.contains(tmp.getOznaka())) {
                data[0] = String.valueOf(tmp.getDatum().getYear() + 1900) + "-" + String.valueOf(tmp.getDatum().getMonth() + 1) + "-" + String.valueOf(tmp.getDatum().getDay());
                data[1] = tmp.getOznaka();
                data[2] = tmp.getTecaj();
                userTableModel.addRow(data);
            }
        }
        jTable1.setModel(userTableModel);

        
        //Pridobimo vse oznake valut iz podatkovne baze, da lahko nastavimo combobox-e
        ls_valuta_date = entityManager.createQuery("SELECT e FROM Valuta e WHERE e.datum BETWEEN :startDate AND :endDate ORDER BY e.oznaka, e.datum")
                .setParameter("startDate", date_od)
                .setParameter("endDate", date_do)
                .getResultList();

        setComboboxOznake();
    }//GEN-LAST:event_jButton2ActionPerformed

    /*
        setComboboxOznake(), posodobi vrednosti vseh combobox-ov, ki prikazujejo izbrane valute. Ob tem se pri vsakem klicu funkcije izvede nova poizvedba v bazo iz katere se pridobijo
        nove vrednosti, glede na nastavitve uporabnika.
     */
    public void setComboboxOznake() {

        //Nova poizvedba v podatkovno bazo
        ls_valuta_date = entityManager.createQuery("SELECT e FROM Valuta e ORDER BY e.oznaka, e.datum")
                .getResultList();

        //Index vstavljanja v combobox-e
        int itemInx = 0;

        //Zanka skozi celotni seznam pridobljen iz baze
        for (int i = 0; i < ls_valuta_date.size(); i++) {
            //Preverimo ali seznam oznak že vsebuje trenutno oznako. Ker duplikatov v seznamu nočemo, jih s pomočjo tega izločimo
            if (ls_oznake.contains(ls_valuta_date.get(i).getOznaka())) {

            } else //Če seznam oznak še ne vsebuje trenutne oznake, najprej preverimo ali podano oznako uporabnik sploh želi prikazati. Ob tem vemo, da če je seznam 
            //prikazanih valut prazen, prikažemo vse valute. Oznako dodamo v seznam oznak in combobox-e ter povečamo index za 1
            if (valute.isEmpty()) {
                ls_oznake.add(ls_valuta_date.get(i).getOznaka());
                jComboBox1.insertItemAt(ls_valuta_date.get(i).getOznaka(), itemInx);
                jComboBox2.insertItemAt(ls_valuta_date.get(i).getOznaka(), itemInx);
                jComboBox3.insertItemAt(ls_valuta_date.get(i).getOznaka(), itemInx);
                itemInx++;
            } else if (valute.contains(ls_valuta_date.get(i).getOznaka())) {
                ls_oznake.add(ls_valuta_date.get(i).getOznaka());
                jComboBox1.insertItemAt(ls_valuta_date.get(i).getOznaka(), itemInx);
                jComboBox2.insertItemAt(ls_valuta_date.get(i).getOznaka(), itemInx);
                jComboBox3.insertItemAt(ls_valuta_date.get(i).getOznaka(), itemInx);
                itemInx++;
            }
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        IzbiraValut iv = new IzbiraValut(this);
        iv.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed
    
    /*
        Combobox za izbiro valute, ki bo prikazana na grafu. Ob tem pridobimo izbran element (oznako valute)
    */
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        Integer izbrano = jComboBox1.getSelectedIndex();    //index izbranega elementa
        String oznaka = ls_oznake.get(izbrano);             //izbrana oznaka oz. valuta
        
        TimeSeries series = new TimeSeries(oznaka);         //TimeSeries, časovnica za novo valuto

        //Zanka skozi vsak datum iz tečajnice izbrane valute
        for (int x = 0; x < ls_valuta_date.size(); x++) {
            RegularTimePeriod t = new Day(ls_valuta_date.get(x).getDatum());
            if (ls_valuta_date.get(x).getOznaka().equals(oznaka)) {
                series.add(t, Double.parseDouble(ls_valuta_date.get(x).getTecaj().substring(0, 4)));
            }
        }
        plot.setDataset(0, new TimeSeriesCollection(series));
        plot.setRenderer(0, new StandardXYItemRenderer());
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /*
        Izračun primerjave dveh valut. Ob tem pridobimo vneseni datum in valuti. Nato iz baze preberemo vrednosti obeh valut na izbran datum ter izčaunamo razliko, katero potem
        izpišemo.
    */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        Date d = new Date(Integer.parseInt(text_letoIzr.getText()) - 1900, Integer.parseInt(text_mesecIzr.getText()) - 1, Integer.parseInt(text_danIzr.getText()));
        String ozn1 = ls_oznake.get(jComboBox3.getSelectedIndex());
        String ozn2 = ls_oznake.get(jComboBox2.getSelectedIndex());

        List<Valuta> qResult = entityManager.createQuery("SELECT e FROM Valuta e WHERE e.datum = :Date AND (e.oznaka LIKE :ozn1 OR e.oznaka LIKE :ozn2)")
                .setParameter("Date", d)
                .setParameter("ozn1", ozn1)
                .setParameter("ozn2", ozn2)
                .getResultList();

        jLabel3.setText(qResult.get(0).getTecaj() + " / " + qResult.get(1).getTecaj());

        Double res = Double.parseDouble(qResult.get(0).getTecaj()) - Double.parseDouble(qResult.get(1).getTecaj());
        if (res > 1) {
            jLabel6.setForeground(Color.green);
            jLabel6.setText("+" + res.toString());
        } else {
            jLabel6.setForeground(Color.red);
            jLabel6.setText("-" + res.toString());
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    /*
        Ob zaprtju programa zapremo tudi povezavo na podatkovo bazo
    */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            DriverManager.getConnection("jdbc:derby:dbase/valute;shutdown=true", "mitja", "mitja");
        } catch (SQLException ex) {
            Logger.getLogger(GlavnoOkno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    /*
        Javna metodi setValute in getValute, uporabljena za komunikacijo iz okna za nastavitev želenih valut.
    */
    public void setValute(List<String> in_valute) {
        this.valute = in_valute;
        jButton2.doClick();
    }

    public List<String> getValute() {
        return this.valute;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlavnoOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlavnoOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlavnoOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlavnoOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }

        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField text_dan1;
    private javax.swing.JTextField text_dan2;
    private javax.swing.JTextField text_danIzr;
    private javax.swing.JTextField text_leto1;
    private javax.swing.JTextField text_leto2;
    private javax.swing.JTextField text_letoIzr;
    private javax.swing.JTextField text_mesec1;
    private javax.swing.JTextField text_mesec2;
    private javax.swing.JTextField text_mesecIzr;
    private java.util.List<com.mycompany.valuta.Valuta> valutaList;
    private java.util.List<com.mycompany.valuta.Valuta> valutaList1;
    private javax.persistence.Query valutaQuery;
    private javax.persistence.Query valutaQuery1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
